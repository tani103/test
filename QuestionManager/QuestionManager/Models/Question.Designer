//------------------------------------------------------------------------------
// <auto-generated>
//    このコードはテンプレートから生成されました。
//
//    このファイルを手動で変更すると、アプリケーションで予期しない動作が発生する可能性があります。
//    このファイルに対する手動の変更は、コードが再生成されると上書きされます。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM リレーションシップのメタデータ

[assembly: EdmRelationshipAttribute("QuestionModel", "FK_member_progress_subjects1", "Subjects", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QuestionManager.Models.Subjects), "MemberProgress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QuestionManager.Models.MemberProgress), true)]
[assembly: EdmRelationshipAttribute("QuestionModel", "FK_questions_subjects1", "Subjects", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QuestionManager.Models.Subjects), "Questions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QuestionManager.Models.Questions), true)]

#endregion

namespace QuestionManager.Models
{
    #region コンテキスト
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    public partial class QuestionEntities : ObjectContext
    {
        #region コンストラクター
    
        /// <summary>
        /// アプリケーション構成ファイルの 'QuestionEntities' セクションにある接続文字列を使用して新しい QuestionEntities オブジェクトを初期化します。
        /// </summary>
        public QuestionEntities() : base("name=QuestionEntities", "QuestionEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 新しい QuestionEntities オブジェクトを初期化します。
        /// </summary>
        public QuestionEntities(string connectionString) : base(connectionString, "QuestionEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 新しい QuestionEntities オブジェクトを初期化します。
        /// </summary>
        public QuestionEntities(EntityConnection connection) : base(connection, "QuestionEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 部分メソッド
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Categories> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Categories>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Categories> _Categories;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<ExamResult> ExamResult
        {
            get
            {
                if ((_ExamResult == null))
                {
                    _ExamResult = base.CreateObjectSet<ExamResult>("ExamResult");
                }
                return _ExamResult;
            }
        }
        private ObjectSet<ExamResult> _ExamResult;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Historys> Historys
        {
            get
            {
                if ((_Historys == null))
                {
                    _Historys = base.CreateObjectSet<Historys>("Historys");
                }
                return _Historys;
            }
        }
        private ObjectSet<Historys> _Historys;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<MemberProgress> MemberProgress
        {
            get
            {
                if ((_MemberProgress == null))
                {
                    _MemberProgress = base.CreateObjectSet<MemberProgress>("MemberProgress");
                }
                return _MemberProgress;
            }
        }
        private ObjectSet<MemberProgress> _MemberProgress;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Questions> Questions
        {
            get
            {
                if ((_Questions == null))
                {
                    _Questions = base.CreateObjectSet<Questions>("Questions");
                }
                return _Questions;
            }
        }
        private ObjectSet<Questions> _Questions;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Subjects> Subjects
        {
            get
            {
                if ((_Subjects == null))
                {
                    _Subjects = base.CreateObjectSet<Subjects>("Subjects");
                }
                return _Subjects;
            }
        }
        private ObjectSet<Subjects> _Subjects;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<TemporaryProgress> TemporaryProgress
        {
            get
            {
                if ((_TemporaryProgress == null))
                {
                    _TemporaryProgress = base.CreateObjectSet<TemporaryProgress>("TemporaryProgress");
                }
                return _TemporaryProgress;
            }
        }
        private ObjectSet<TemporaryProgress> _TemporaryProgress;

        #endregion

        #region AddTo メソッド
    
        /// <summary>
        /// Categories EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToCategories(Categories categories)
        {
            base.AddObject("Categories", categories);
        }
    
        /// <summary>
        /// ExamResult EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToExamResult(ExamResult examResult)
        {
            base.AddObject("ExamResult", examResult);
        }
    
        /// <summary>
        /// Historys EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToHistorys(Historys historys)
        {
            base.AddObject("Historys", historys);
        }
    
        /// <summary>
        /// MemberProgress EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToMemberProgress(MemberProgress memberProgress)
        {
            base.AddObject("MemberProgress", memberProgress);
        }
    
        /// <summary>
        /// Questions EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToQuestions(Questions questions)
        {
            base.AddObject("Questions", questions);
        }
    
        /// <summary>
        /// Subjects EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToSubjects(Subjects subjects)
        {
            base.AddObject("Subjects", subjects);
        }
    
        /// <summary>
        /// TemporaryProgress EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToTemporaryProgress(TemporaryProgress temporaryProgress)
        {
            base.AddObject("TemporaryProgress", temporaryProgress);
        }

        #endregion

    }

    #endregion

    #region エンティティ
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuestionModel", Name="Categories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Categories : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Categories オブジェクトを作成します。
        /// </summary>
        /// <param name="categoryID">CategoryID プロパティの初期値。</param>
        /// <param name="categoryName">CategoryName プロパティの初期値。</param>
        /// <param name="isDelete">IsDelete プロパティの初期値。</param>
        public static Categories CreateCategories(global::System.Int32 categoryID, global::System.String categoryName, global::System.Boolean isDelete)
        {
            Categories categories = new Categories();
            categories.CategoryID = categoryID;
            categories.CategoryName = categoryName;
            categories.IsDelete = isDelete;
            return categories;
        }

        #endregion

        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDelete
        {
            get
            {
                return _IsDelete;
            }
            set
            {
                OnIsDeleteChanging(value);
                ReportPropertyChanging("IsDelete");
                _IsDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDelete");
                OnIsDeleteChanged();
            }
        }
        private global::System.Boolean _IsDelete;
        partial void OnIsDeleteChanging(global::System.Boolean value);
        partial void OnIsDeleteChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuestionModel", Name="ExamResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExamResult : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい ExamResult オブジェクトを作成します。
        /// </summary>
        /// <param name="examID">ExamID プロパティの初期値。</param>
        public static ExamResult CreateExamResult(global::System.Int32 examID)
        {
            ExamResult examResult = new ExamResult();
            examResult.ExamID = examID;
            return examResult;
        }

        #endregion

        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExamID
        {
            get
            {
                return _ExamID;
            }
            set
            {
                if (_ExamID != value)
                {
                    OnExamIDChanging(value);
                    ReportPropertyChanging("ExamID");
                    _ExamID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExamID");
                    OnExamIDChanged();
                }
            }
        }
        private global::System.Int32 _ExamID;
        partial void OnExamIDChanging(global::System.Int32 value);
        partial void OnExamIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChallengeTime
        {
            get
            {
                return _ChallengeTime;
            }
            set
            {
                OnChallengeTimeChanging(value);
                ReportPropertyChanging("ChallengeTime");
                _ChallengeTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChallengeTime");
                OnChallengeTimeChanged();
            }
        }
        private Nullable<global::System.Int32> _ChallengeTime;
        partial void OnChallengeTimeChanging(Nullable<global::System.Int32> value);
        partial void OnChallengeTimeChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CorrectAnswersCount
        {
            get
            {
                return _CorrectAnswersCount;
            }
            set
            {
                OnCorrectAnswersCountChanging(value);
                ReportPropertyChanging("CorrectAnswersCount");
                _CorrectAnswersCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorrectAnswersCount");
                OnCorrectAnswersCountChanged();
            }
        }
        private Nullable<global::System.Int32> _CorrectAnswersCount;
        partial void OnCorrectAnswersCountChanging(Nullable<global::System.Int32> value);
        partial void OnCorrectAnswersCountChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubjectID;
        partial void OnSubjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubjectIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuestionModel", Name="Historys")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Historys : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Historys オブジェクトを作成します。
        /// </summary>
        /// <param name="historyID">HistoryID プロパティの初期値。</param>
        public static Historys CreateHistorys(global::System.Int32 historyID)
        {
            Historys historys = new Historys();
            historys.HistoryID = historyID;
            return historys;
        }

        #endregion

        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HistoryID
        {
            get
            {
                return _HistoryID;
            }
            set
            {
                if (_HistoryID != value)
                {
                    OnHistoryIDChanging(value);
                    ReportPropertyChanging("HistoryID");
                    _HistoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HistoryID");
                    OnHistoryIDChanged();
                }
            }
        }
        private global::System.Int32 _HistoryID;
        partial void OnHistoryIDChanging(global::System.Int32 value);
        partial void OnHistoryIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> QuestionID
        {
            get
            {
                return _QuestionID;
            }
            set
            {
                OnQuestionIDChanging(value);
                ReportPropertyChanging("QuestionID");
                _QuestionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuestionID");
                OnQuestionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _QuestionID;
        partial void OnQuestionIDChanging(Nullable<global::System.Int32> value);
        partial void OnQuestionIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserAnswer
        {
            get
            {
                return _UserAnswer;
            }
            set
            {
                OnUserAnswerChanging(value);
                ReportPropertyChanging("UserAnswer");
                _UserAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserAnswer");
                OnUserAnswerChanged();
            }
        }
        private global::System.String _UserAnswer;
        partial void OnUserAnswerChanging(global::System.String value);
        partial void OnUserAnswerChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubjectID;
        partial void OnSubjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubjectIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCorrect
        {
            get
            {
                return _IsCorrect;
            }
            set
            {
                OnIsCorrectChanging(value);
                ReportPropertyChanging("IsCorrect");
                _IsCorrect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCorrect");
                OnIsCorrectChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCorrect;
        partial void OnIsCorrectChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCorrectChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChallengeTime
        {
            get
            {
                return _ChallengeTime;
            }
            set
            {
                OnChallengeTimeChanging(value);
                ReportPropertyChanging("ChallengeTime");
                _ChallengeTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChallengeTime");
                OnChallengeTimeChanged();
            }
        }
        private Nullable<global::System.Int32> _ChallengeTime;
        partial void OnChallengeTimeChanging(Nullable<global::System.Int32> value);
        partial void OnChallengeTimeChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CorrectAnswerCount
        {
            get
            {
                return _CorrectAnswerCount;
            }
            set
            {
                OnCorrectAnswerCountChanging(value);
                ReportPropertyChanging("CorrectAnswerCount");
                _CorrectAnswerCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorrectAnswerCount");
                OnCorrectAnswerCountChanged();
            }
        }
        private Nullable<global::System.Int32> _CorrectAnswerCount;
        partial void OnCorrectAnswerCountChanging(Nullable<global::System.Int32> value);
        partial void OnCorrectAnswerCountChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TestDay
        {
            get
            {
                return _TestDay;
            }
            set
            {
                OnTestDayChanging(value);
                ReportPropertyChanging("TestDay");
                _TestDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestDay");
                OnTestDayChanged();
            }
        }
        private Nullable<global::System.DateTime> _TestDay;
        partial void OnTestDayChanging(Nullable<global::System.DateTime> value);
        partial void OnTestDayChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuestionModel", Name="MemberProgress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MemberProgress : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい MemberProgress オブジェクトを作成します。
        /// </summary>
        /// <param name="progressID">ProgressID プロパティの初期値。</param>
        /// <param name="userID">UserID プロパティの初期値。</param>
        /// <param name="subjectID">SubjectID プロパティの初期値。</param>
        /// <param name="challengeTimes">ChallengeTimes プロパティの初期値。</param>
        public static MemberProgress CreateMemberProgress(global::System.Int32 progressID, global::System.Guid userID, global::System.Int32 subjectID, global::System.Int32 challengeTimes)
        {
            MemberProgress memberProgress = new MemberProgress();
            memberProgress.ProgressID = progressID;
            memberProgress.UserID = userID;
            memberProgress.SubjectID = subjectID;
            memberProgress.ChallengeTimes = challengeTimes;
            return memberProgress;
        }

        #endregion

        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProgressID
        {
            get
            {
                return _ProgressID;
            }
            set
            {
                if (_ProgressID != value)
                {
                    OnProgressIDChanging(value);
                    ReportPropertyChanging("ProgressID");
                    _ProgressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProgressID");
                    OnProgressIDChanged();
                }
            }
        }
        private global::System.Int32 _ProgressID;
        partial void OnProgressIDChanging(global::System.Int32 value);
        partial void OnProgressIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private global::System.Int32 _SubjectID;
        partial void OnSubjectIDChanging(global::System.Int32 value);
        partial void OnSubjectIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPass
        {
            get
            {
                return _IsPass;
            }
            set
            {
                OnIsPassChanging(value);
                ReportPropertyChanging("IsPass");
                _IsPass = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPass");
                OnIsPassChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPass;
        partial void OnIsPassChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPassChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChallengeTimes
        {
            get
            {
                return _ChallengeTimes;
            }
            set
            {
                OnChallengeTimesChanging(value);
                ReportPropertyChanging("ChallengeTimes");
                _ChallengeTimes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChallengeTimes");
                OnChallengeTimesChanged();
            }
        }
        private global::System.Int32 _ChallengeTimes;
        partial void OnChallengeTimesChanging(global::System.Int32 value);
        partial void OnChallengeTimesChanged();

        #endregion

    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuestionModel", "FK_member_progress_subjects1", "Subjects")]
        public Subjects Subjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subjects>("QuestionModel.FK_member_progress_subjects1", "Subjects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subjects>("QuestionModel.FK_member_progress_subjects1", "Subjects").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subjects> SubjectsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subjects>("QuestionModel.FK_member_progress_subjects1", "Subjects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subjects>("QuestionModel.FK_member_progress_subjects1", "Subjects", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuestionModel", Name="Questions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Questions : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Questions オブジェクトを作成します。
        /// </summary>
        /// <param name="questionID">QuestionID プロパティの初期値。</param>
        /// <param name="subjectID">SubjectID プロパティの初期値。</param>
        /// <param name="question">Question プロパティの初期値。</param>
        /// <param name="answer">Answer プロパティの初期値。</param>
        /// <param name="isDelete">IsDelete プロパティの初期値。</param>
        public static Questions CreateQuestions(global::System.Int32 questionID, global::System.Int32 subjectID, global::System.String question, global::System.String answer, global::System.Boolean isDelete, global::System.String picturePath)
        {
            Questions questions = new Questions();
            questions.QuestionID = questionID;
            questions.SubjectID = subjectID;
            questions.Question = question;
            questions.Answer = answer;
            questions.IsDelete = isDelete;
            questions.PicturePath = picturePath;
            return questions;
        }

        #endregion

        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionID
        {
            get
            {
                return _QuestionID;
            }
            set
            {
                if (_QuestionID != value)
                {
                    OnQuestionIDChanging(value);
                    ReportPropertyChanging("QuestionID");
                    _QuestionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuestionID");
                    OnQuestionIDChanged();
                }
            }
        }
        private global::System.Int32 _QuestionID;
        partial void OnQuestionIDChanging(global::System.Int32 value);
        partial void OnQuestionIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private global::System.Int32 _SubjectID;
        partial void OnSubjectIDChanging(global::System.Int32 value);
        partial void OnSubjectIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Question
        {
            get
            {
                return _Question;
            }
            set
            {
                OnQuestionChanging(value);
                ReportPropertyChanging("Question");
                _Question = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Question");
                OnQuestionChanged();
            }
        }
        private global::System.String _Question;
        partial void OnQuestionChanging(global::System.String value);
        partial void OnQuestionChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Answer
        {
            get
            {
                return _Answer;
            }
            set
            {
                OnAnswerChanging(value);
                ReportPropertyChanging("Answer");
                _Answer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Answer");
                OnAnswerChanged();
            }
        }
        private global::System.String _Answer;
        partial void OnAnswerChanging(global::System.String value);
        partial void OnAnswerChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDelete
        {
            get
            {
                return _IsDelete;
            }
            set
            {
                OnIsDeleteChanging(value);
                ReportPropertyChanging("IsDelete");
                _IsDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDelete");
                OnIsDeleteChanged();
            }
        }
        private global::System.Boolean _IsDelete;
        partial void OnIsDeleteChanging(global::System.Boolean value);
        partial void OnIsDeleteChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PicturePath
        {
            get
            {
                return _PicturePath;
            }
            set
            {
                OnPicturePathChanging(value);
                ReportPropertyChanging("PicturePath");
                _PicturePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PicturePath");
                OnPicturePathChanged();
            }
        }
        private global::System.String _PicturePath;
        partial void OnPicturePathChanging(global::System.String value);
        partial void OnPicturePathChanged();

        #endregion

    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuestionModel", "FK_questions_subjects1", "Subjects")]
        public Subjects Subjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subjects>("QuestionModel.FK_questions_subjects1", "Subjects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subjects>("QuestionModel.FK_questions_subjects1", "Subjects").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subjects> SubjectsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subjects>("QuestionModel.FK_questions_subjects1", "Subjects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subjects>("QuestionModel.FK_questions_subjects1", "Subjects", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuestionModel", Name="Subjects")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subjects : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Subjects オブジェクトを作成します。
        /// </summary>
        /// <param name="subjectID">SubjectID プロパティの初期値。</param>
        /// <param name="subjectName">SubjectName プロパティの初期値。</param>
        /// <param name="subjectOrder">SubjectOrder プロパティの初期値。</param>
        /// <param name="isDelete">IsDelete プロパティの初期値。</param>
        /// <param name="categoryID">CategoryID プロパティの初期値。</param>
        public static Subjects CreateSubjects(global::System.Int32 subjectID, global::System.String subjectName, global::System.Int32 subjectOrder, global::System.Boolean isDelete, global::System.Int32 categoryID, global::System.Int32 timeLimit)
        {
            Subjects subjects = new Subjects();
            subjects.SubjectID = subjectID;
            subjects.SubjectName = subjectName;
            subjects.SubjectOrder = subjectOrder;
            subjects.IsDelete = isDelete;
            subjects.CategoryID = categoryID;
            subjects.TimeLimit = timeLimit;
            return subjects;
        }

        #endregion

        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                if (_SubjectID != value)
                {
                    OnSubjectIDChanging(value);
                    ReportPropertyChanging("SubjectID");
                    _SubjectID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubjectID");
                    OnSubjectIDChanged();
                }
            }
        }
        private global::System.Int32 _SubjectID;
        partial void OnSubjectIDChanging(global::System.Int32 value);
        partial void OnSubjectIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubjectName
        {
            get
            {
                return _SubjectName;
            }
            set
            {
                OnSubjectNameChanging(value);
                ReportPropertyChanging("SubjectName");
                _SubjectName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SubjectName");
                OnSubjectNameChanged();
            }
        }
        private global::System.String _SubjectName;
        partial void OnSubjectNameChanging(global::System.String value);
        partial void OnSubjectNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectOrder
        {
            get
            {
                return _SubjectOrder;
            }
            set
            {
                OnSubjectOrderChanging(value);
                ReportPropertyChanging("SubjectOrder");
                _SubjectOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectOrder");
                OnSubjectOrderChanged();
            }
        }
        private global::System.Int32 _SubjectOrder;
        partial void OnSubjectOrderChanging(global::System.Int32 value);
        partial void OnSubjectOrderChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDelete
        {
            get
            {
                return _IsDelete;
            }
            set
            {
                OnIsDeleteChanging(value);
                ReportPropertyChanging("IsDelete");
                _IsDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDelete");
                OnIsDeleteChanged();
            }
        }
        private global::System.Boolean _IsDelete;
        partial void OnIsDeleteChanging(global::System.Boolean value);
        partial void OnIsDeleteChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TimeLimit
        {
            get
            {
                return _TimeLimit;
            }
            set
            {
                OnTimeLimitChanging(value);
                ReportPropertyChanging("TimeLimit");
                _TimeLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeLimit");
                OnTimeLimitChanged();
            }
        }
        private Nullable<global::System.Int32> _TimeLimit;
        partial void OnTimeLimitChanging(Nullable<global::System.Int32> value);
        partial void OnTimeLimitChanged();

        #endregion

    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuestionModel", "FK_member_progress_subjects1", "MemberProgress")]
        public EntityCollection<MemberProgress> MemberProgress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MemberProgress>("QuestionModel.FK_member_progress_subjects1", "MemberProgress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MemberProgress>("QuestionModel.FK_member_progress_subjects1", "MemberProgress", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuestionModel", "FK_questions_subjects1", "Questions")]
        public EntityCollection<Questions> Questions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Questions>("QuestionModel.FK_questions_subjects1", "Questions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Questions>("QuestionModel.FK_questions_subjects1", "Questions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuestionModel", Name="TemporaryProgress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TemporaryProgress : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい TemporaryProgress オブジェクトを作成します。
        /// </summary>
        /// <param name="temporaryID">TemporaryID プロパティの初期値。</param>
        public static TemporaryProgress CreateTemporaryProgress(global::System.Int32 temporaryID)
        {
            TemporaryProgress temporaryProgress = new TemporaryProgress();
            temporaryProgress.TemporaryID = temporaryID;
            return temporaryProgress;
        }

        #endregion

        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TemporaryID
        {
            get
            {
                return _TemporaryID;
            }
            set
            {
                if (_TemporaryID != value)
                {
                    OnTemporaryIDChanging(value);
                    ReportPropertyChanging("TemporaryID");
                    _TemporaryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TemporaryID");
                    OnTemporaryIDChanged();
                }
            }
        }
        private global::System.Int32 _TemporaryID;
        partial void OnTemporaryIDChanging(global::System.Int32 value);
        partial void OnTemporaryIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> QuestionID
        {
            get
            {
                return _QuestionID;
            }
            set
            {
                OnQuestionIDChanging(value);
                ReportPropertyChanging("QuestionID");
                _QuestionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuestionID");
                OnQuestionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _QuestionID;
        partial void OnQuestionIDChanging(Nullable<global::System.Int32> value);
        partial void OnQuestionIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserAnswer
        {
            get
            {
                return _UserAnswer;
            }
            set
            {
                OnUserAnswerChanging(value);
                ReportPropertyChanging("UserAnswer");
                _UserAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserAnswer");
                OnUserAnswerChanged();
            }
        }
        private global::System.String _UserAnswer;
        partial void OnUserAnswerChanging(global::System.String value);
        partial void OnUserAnswerChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubjectID;
        partial void OnSubjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubjectIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();

        #endregion

    
    }

    #endregion

    
}
